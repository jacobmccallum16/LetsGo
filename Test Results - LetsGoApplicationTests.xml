<?xml version="1.0" encoding="UTF-8"?><testrun duration="1046" footerText="Generated by IntelliJ IDEA on 2023-08-04, 11:14 p.m." name="LetsGoApplicationTests">
    <count name="total" value="12"/>
    <count name="passed" value="12"/>
    <config nameIsGenerated="true" configId="JUnit" name="LetsGoApplicationTests">
        <module name="LetsGo"/>
        <extension name="coverage">
            <pattern>
                <option name="PATTERN" value="com.example.letsgo.*"/>
                <option name="ENABLED" value="true"/>
            </pattern>
        </extension>
        <option name="PACKAGE_NAME" value="com.example.letsgo"/>
        <option name="MAIN_CLASS_NAME" value="com.example.letsgo.LetsGoApplicationTests"/>
        <option name="TEST_OBJECT" value="class"/>
        <method v="2">
            <option name="Make" enabled="true"/>
        </method>
    </config>
    <root name="LetsGoApplicationTests" comment="com.example.letsgo" location="java:suite://com.example.letsgo.LetsGoApplicationTests">
        <output type="stdout">/Users/jacobmccallum/Library/Java/JavaVirtualMachines/openjdk-20.0.1/Contents/Home/bin/java -ea -Didea.test.cyclic.buffer.size=1048576 -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=54494:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath /Users/jacobmccallum/.m2/repository/org/junit/platform/junit-platform-launcher/1.9.3/junit-platform-launcher-1.9.3.jar:/Users/jacobmccallum/.m2/repository/org/junit/vintage/junit-vintage-engine/5.9.3/junit-vintage-engine-5.9.3.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/jacobmccallum/IdeaProjects/LetsGo/target/test-classes:/Users/jacobmccallum/IdeaProjects/LetsGo/target/classes:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.1/spring-boot-starter-data-jpa-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.1/spring-boot-starter-aop-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-aop/6.0.10/spring-aop-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.1/spring-boot-starter-jdbc-3.1.1.jar:/Users/jacobmccallum/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-jdbc/6.0.10/spring-jdbc-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/hibernate/orm/hibernate-core/6.2.5.Final/hibernate-core-6.2.5.Final.jar:/Users/jacobmccallum/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/jacobmccallum/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/jacobmccallum/.m2/repository/org/jboss/logging/jboss-logging/3.5.1.Final/jboss-logging-3.5.1.Final.jar:/Users/jacobmccallum/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/jacobmccallum/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/jacobmccallum/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/jacobmccallum/.m2/repository/net/bytebuddy/byte-buddy/1.14.5/byte-buddy-1.14.5.jar:/Users/jacobmccallum/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/Users/jacobmccallum/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/Users/jacobmccallum/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/jacobmccallum/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/Users/jacobmccallum/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/jacobmccallum/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/jacobmccallum/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/data/spring-data-jpa/3.1.1/spring-data-jpa-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/data/spring-data-commons/3.1.1/spring-data-commons-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-orm/6.0.10/spring-orm-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-tx/6.0.10/spring-tx-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-beans/6.0.10/spring-beans-6.0.10.jar:/Users/jacobmccallum/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/jacobmccallum/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-aspects/6.0.10/spring-aspects-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/3.1.1/spring-boot-starter-thymeleaf-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.1/spring-boot-starter-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.1/spring-boot-autoconfigure-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.1/spring-boot-starter-logging-3.1.1.jar:/Users/jacobmccallum/.m2/repository/ch/qos/logback/logback-classic/1.4.8/logback-classic-1.4.8.jar:/Users/jacobmccallum/.m2/repository/ch/qos/logback/logback-core/1.4.8/logback-core-1.4.8.jar:/Users/jacobmccallum/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/Users/jacobmccallum/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/Users/jacobmccallum/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/Users/jacobmccallum/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/Users/jacobmccallum/.m2/repository/org/thymeleaf/thymeleaf-spring6/3.1.1.RELEASE/thymeleaf-spring6-3.1.1.RELEASE.jar:/Users/jacobmccallum/.m2/repository/org/thymeleaf/thymeleaf/3.1.1.RELEASE/thymeleaf-3.1.1.RELEASE.jar:/Users/jacobmccallum/.m2/repository/org/attoparser/attoparser/2.0.6.RELEASE/attoparser-2.0.6.RELEASE.jar:/Users/jacobmccallum/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.1/spring-boot-starter-web-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.1/spring-boot-starter-json-3.1.1.jar:/Users/jacobmccallum/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/Users/jacobmccallum/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/Users/jacobmccallum/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/Users/jacobmccallum/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/Users/jacobmccallum/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/Users/jacobmccallum/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.1/spring-boot-starter-tomcat-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.10/tomcat-embed-core-10.1.10.jar:/Users/jacobmccallum/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.10/tomcat-embed-el-10.1.10.jar:/Users/jacobmccallum/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.10/tomcat-embed-websocket-10.1.10.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-web/6.0.10/spring-web-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-webmvc/6.0.10/spring-webmvc-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-expression/6.0.10/spring-expression-6.0.10.jar:/Users/jacobmccallum/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/jacobmccallum/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.1/spring-boot-starter-test-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-test/3.1.1/spring-boot-test-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.1/spring-boot-test-autoconfigure-3.1.1.jar:/Users/jacobmccallum/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/Users/jacobmccallum/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/jacobmccallum/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/jacobmccallum/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/Users/jacobmccallum/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/Users/jacobmccallum/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/jacobmccallum/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/jacobmccallum/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/jacobmccallum/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/Users/jacobmccallum/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.5/byte-buddy-agent-1.14.5.jar:/Users/jacobmccallum/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/jacobmccallum/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/jacobmccallum/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-core/6.0.10/spring-core-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-jcl/6.0.10/spring-jcl-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-test/6.0.10/spring-test-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot/3.1.0/spring-boot-3.1.0.jar:/Users/jacobmccallum/.m2/repository/org/springframework/spring-context/6.0.10/spring-context-6.0.10.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.1.1/spring-boot-starter-actuator-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.1.1/spring-boot-actuator-autoconfigure-3.1.1.jar:/Users/jacobmccallum/.m2/repository/org/springframework/boot/spring-boot-actuator/3.1.1/spring-boot-actuator-3.1.1.jar:/Users/jacobmccallum/.m2/repository/io/micrometer/micrometer-observation/1.11.1/micrometer-observation-1.11.1.jar:/Users/jacobmccallum/.m2/repository/io/micrometer/micrometer-commons/1.11.1/micrometer-commons-1.11.1.jar:/Users/jacobmccallum/.m2/repository/io/micrometer/micrometer-core/1.11.1/micrometer-core-1.11.1.jar:/Users/jacobmccallum/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/jacobmccallum/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/jacobmccallum/.m2/repository/junit/junit/4.13.1/junit-4.13.1.jar:/Users/jacobmccallum/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/jacobmccallum/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.0/junit-jupiter-5.10.0.jar:/Users/jacobmccallum/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/Users/jacobmccallum/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/jacobmccallum/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/Users/jacobmccallum/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/jacobmccallum/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/Users/jacobmccallum/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/Users/jacobmccallum/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/Users/jacobmccallum/.m2/repository/org/mockito/mockito-junit-jupiter/3.6.28/mockito-junit-jupiter-3.6.28.jar com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.example.letsgo.LetsGoApplicationTests
</output>
        <output type="stdout">23:13:58.291 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.letsgo.LetsGoApplicationTests]: LetsGoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
23:13:58.434 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.letsgo.LetsGoApplication for test class com.example.letsgo.LetsGoApplicationTests
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.0)
2023-08-04T23:13:58.933-07:00  INFO 48184 --- [           main] c.example.letsgo.LetsGoApplicationTests  : Starting LetsGoApplicationTests using Java 20.0.1 with PID 48184 (started by jacobmccallum in /Users/jacobmccallum/IdeaProjects/LetsGo)
2023-08-04T23:13:58.934-07:00  INFO 48184 --- [           main] c.example.letsgo.LetsGoApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2023-08-04T23:13:59.954-07:00  INFO 48184 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-04T23:14:00.046-07:00  INFO 48184 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 82 ms. Found 9 JPA repository interfaces.
2023-08-04T23:14:00.625-07:00  INFO 48184 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-04T23:14:00.683-07:00  INFO 48184 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-08-04T23:14:00.685-07:00  INFO 48184 --- [           main] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2023-08-04T23:14:00.847-07:00  INFO 48184 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-08-04T23:14:01.004-07:00  INFO 48184 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-08-04T23:14:01.021-07:00  INFO 48184 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-08-04T23:14:01.243-07:00  INFO 48184 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@14be750c
2023-08-04T23:14:01.244-07:00  INFO 48184 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-08-04T23:14:01.289-07:00  WARN 48184 --- [           main] org.hibernate.dialect.Dialect            : HHH000511: The 5.5.0 version for [org.hibernate.dialect.MariaDBDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 10.3.0. Check the community dialects project for available legacy versions.
2023-08-04T23:14:01.678-07:00  INFO 48184 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-08-04T23:14:02.771-07:00  INFO 48184 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table driver modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table driver modify column driver_responsibility_rating  FLOAT DEFAULT '0'
Hibernate: alter table driver modify column driver_safety_rating  FLOAT DEFAULT '0'
Hibernate: alter table driver modify column driver_safety_score  FLOAT DEFAULT '0'
Hibernate: alter table driver modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table driver_rating modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table driver_rating modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table driver_trip_transaction modify column base_rate_distance  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table driver_trip_transaction modify column base_rate_duration  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table driver_trip_transaction modify column base_rate_multiplier  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table driver_trip_transaction modify column base_rate_subtotal  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table driver_trip_transaction modify column distance_actual  FLOAT DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column distance_estimated  FLOAT DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column distance_subtotal  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column driver_safety_score  FLOAT DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column duration_actual  FLOAT DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column duration_estimated  FLOAT DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column duration_subtotal  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column final_total  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column multi_passenger_bonus  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table driver_trip_transaction modify column multi_passenger_bonus_max  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column multi_passenger_multiplier  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column multi_passenger_multiplier_max  DECIMAL(8,2) DEFAULT 0.3
Hibernate: alter table driver_trip_transaction modify column pre_trip_quote  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column pre_trip_quote_max  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column tip_amount  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column trip_total  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table driver_trip_transaction modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table payment_method modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table payment_method modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table rider modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table rider modify column rider_responsibility_rating  FLOAT DEFAULT '0'
Hibernate: alter table rider modify column rider_safety_rating  FLOAT DEFAULT '0'
Hibernate: alter table rider modify column rider_safety_score  FLOAT DEFAULT '0'
Hibernate: alter table rider modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table rider_rating modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table rider_rating modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table rider_trip_transaction modify column base_rate_distance  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table rider_trip_transaction modify column base_rate_duration  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table rider_trip_transaction modify column base_rate_multiplier  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table rider_trip_transaction modify column base_rate_subtotal  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table rider_trip_transaction modify column distance_actual  FLOAT DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column distance_estimated  FLOAT DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column distance_subtotal  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column duration_actual  FLOAT DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column duration_estimated  FLOAT DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column duration_subtotal  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column final_total  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column multi_passenger_discount  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table rider_trip_transaction modify column multi_passenger_discount_max  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column multi_passenger_multiplier  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table rider_trip_transaction modify column multi_passenger_multiplier_max  DECIMAL(8,2) DEFAULT 1.3
Hibernate: alter table rider_trip_transaction modify column pre_trip_quote  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column pre_trip_quote_max  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column rider_safety_score  FLOAT DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column tip_amount  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column trip_total  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table rider_trip_transaction modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table route modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table route modify column route_distance  FLOAT DEFAULT 0
Hibernate: alter table route modify column route_duration  FLOAT DEFAULT 0
Hibernate: alter table route modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table trip modify column arrival_time  DATETIME
Hibernate: alter table trip modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table trip modify column departure_time  DATETIME
Hibernate: alter table trip modify column trip_distance_actual  float(23)
Hibernate: alter table trip modify column trip_distance_estimated  float(23)
Hibernate: alter table trip modify column trip_duration_actual  float(23)
Hibernate: alter table trip modify column trip_duration_estimated  float(23)
Hibernate: alter table trip modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table trip_transaction modify column base_rate  DECIMAL(8,2) DEFAULT 2
Hibernate: alter table trip_transaction modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table trip_transaction modify column distance_fee  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table trip_transaction modify column duration_fee  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table trip_transaction modify column final_price  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table trip_transaction modify column multipassenger_adjustment  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table trip_transaction modify column multipassenger_discount  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table trip_transaction modify column subtotal  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table trip_transaction modify column surge_percent  DECIMAL(8,2) DEFAULT 1
Hibernate: alter table trip_transaction modify column tax_amount  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table trip_transaction modify column tax_rate  DECIMAL(8,2) DEFAULT 1.12
Hibernate: alter table trip_transaction modify column tip_amount  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table trip_transaction modify column total  DECIMAL(8,2) DEFAULT 0
Hibernate: alter table trip_transaction modify column trip_distance  FLOAT DEFAULT 0
Hibernate: alter table trip_transaction modify column trip_duration  FLOAT DEFAULT 0
Hibernate: alter table trip_transaction modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table user modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table user modify column overall_responsibility_rating  FLOAT DEFAULT '0'
Hibernate: alter table user modify column overall_safety_rating  FLOAT DEFAULT '0'
Hibernate: alter table user modify column overall_safety_score  FLOAT DEFAULT '0'
Hibernate: alter table user modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table vehicle modify column created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
Hibernate: alter table vehicle modify column updated_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP null
2023-08-04T23:14:04.996-07:00  INFO 48184 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-04T23:14:05.463-07:00  INFO 48184 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2023-08-04T23:14:06.460-07:00  WARN 48184 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-04T23:14:07.092-07:00  INFO 48184 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-08-04T23:14:07.093-07:00  INFO 48184 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-08-04T23:14:07.103-07:00  INFO 48184 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-04T23:14:07.118-07:00  INFO 48184 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 23 ms
2023-08-04T23:14:07.196-07:00  INFO 48184 --- [           main] c.example.letsgo.LetsGoApplicationTests  : Started LetsGoApplicationTests in 8.581 seconds (process running for 9.797)
2023-08-04T23:14:08.361-07:00  INFO 48184 --- [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-04T23:14:08.364-07:00  INFO 48184 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-08-04T23:14:08.375-07:00  INFO 48184 --- [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
</output>
        <output type="stdout">Process finished with exit code 0
</output>
    </root>
    <test duration="825" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginAdminAdmin" name="testLoginAdminAdmin()" metainfo="" status="passed">
        <output type="stderr">OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
</output>
        <output type="stdout">---Logging in with the "admin" "admin" bypass---
Logging with these credentials: { username: "admin", password: "admin"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.email=? and u1_0.password=?
Logged in successfully with "admin" "admin" bypass, now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
    <test duration="43" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginDriverUsername" name="testLoginDriverUsername()" metainfo="" status="passed">
        <output type="stdout">---Logging in to a driver account with username---
Logging with these credentials: { username: "testdriver", password: "testdriver"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select d1_0.driver_id,d1_0.created_at,d1_0.driver_responsibility_rating,d1_0.driver_safety_rating,d1_0.driver_safety_score,d1_0.driver_status,d1_0.is_active,d1_0.times_rated,d1_0.trips_driven,d1_0.updated_at,d1_0.user_id from driver d1_0 where d1_0.user_id=?
Hibernate: select r1_0.rider_id,r1_0.created_at,r1_0.is_active,r1_0.rider_responsibility_rating,r1_0.rider_safety_rating,r1_0.rider_safety_score,r1_0.rider_status,r1_0.times_rated,r1_0.trips_taken,r1_0.updated_at,r1_0.user_id from rider r1_0 where r1_0.user_id=?
Logged in successfully, now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
    <test duration="20" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginDriverEmail" name="testLoginDriverEmail()" metainfo="" status="passed">
        <output type="stdout">---Logging in to a driver account with email---
Logging with these credentials: { username: "testdriver@gmail.com", password: "testdriver"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.email=? and u1_0.password=?
Hibernate: select d1_0.driver_id,d1_0.created_at,d1_0.driver_responsibility_rating,d1_0.driver_safety_rating,d1_0.driver_safety_score,d1_0.driver_status,d1_0.is_active,d1_0.times_rated,d1_0.trips_driven,d1_0.updated_at,d1_0.user_id from driver d1_0 where d1_0.user_id=?
Hibernate: select r1_0.rider_id,r1_0.created_at,r1_0.is_active,r1_0.rider_responsibility_rating,r1_0.rider_safety_rating,r1_0.rider_safety_score,r1_0.rider_status,r1_0.times_rated,r1_0.trips_taken,r1_0.updated_at,r1_0.user_id from rider r1_0 where r1_0.user_id=?
Logged in successfully, now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
    <test duration="14" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginInvalid" name="testLoginInvalid()" metainfo="" status="passed">
        <output type="stdout">---Trying to log in to an account that doesn't exist---
Logging with these credentials: { username: "invalid", password: "invalid"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.email=? and u1_0.password=?
Login failed, now using assertEquals() to evaluate the resulting HttpSession object
The failure to log in was a success!
</output>
    </test>
    <test duration="17" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginRiderDriver" name="testLoginRiderDriver()" metainfo="" status="passed">
        <output type="stdout">---Logging in to a dual rider-driver account with email---
Logging with these credentials: { username: "testriderdriver@gmail.com", password: "testriderdriver"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select d1_0.driver_id,d1_0.created_at,d1_0.driver_responsibility_rating,d1_0.driver_safety_rating,d1_0.driver_safety_score,d1_0.driver_status,d1_0.is_active,d1_0.times_rated,d1_0.trips_driven,d1_0.updated_at,d1_0.user_id from driver d1_0 where d1_0.user_id=?
Hibernate: select r1_0.rider_id,r1_0.created_at,r1_0.is_active,r1_0.rider_responsibility_rating,r1_0.rider_safety_rating,r1_0.rider_safety_score,r1_0.rider_status,r1_0.times_rated,r1_0.trips_taken,r1_0.updated_at,r1_0.user_id from rider r1_0 where r1_0.user_id=?
Logged in successfully, now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
    <test duration="21" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginRiderUnusualEmailCapitalization" name="testLoginRiderUnusualEmailCapitalization()" metainfo="" status="passed">
        <output type="stdout">---Logging in to a rider account with weirdly capitalized email---
Logging with these credentials: { username: "TeStRiDeR@GmAiL.CoM", password: "testrider"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.email=? and u1_0.password=?
Hibernate: select d1_0.driver_id,d1_0.created_at,d1_0.driver_responsibility_rating,d1_0.driver_safety_rating,d1_0.driver_safety_score,d1_0.driver_status,d1_0.is_active,d1_0.times_rated,d1_0.trips_driven,d1_0.updated_at,d1_0.user_id from driver d1_0 where d1_0.user_id=?
Hibernate: select r1_0.rider_id,r1_0.created_at,r1_0.is_active,r1_0.rider_responsibility_rating,r1_0.rider_safety_rating,r1_0.rider_safety_score,r1_0.rider_status,r1_0.times_rated,r1_0.trips_taken,r1_0.updated_at,r1_0.user_id from rider r1_0 where r1_0.user_id=?
Login successful because emails are case insensitive
Now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
    <test duration="18" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testValidLoginCD" name="testValidLoginCD()" metainfo="" status="passed">
        <output type="stdout">---Logging in to a rider, driver, and user account with username---
---(this was the first successful test!)---
Logging with these credentials: { username: "cd", password: "cd"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select d1_0.driver_id,d1_0.created_at,d1_0.driver_responsibility_rating,d1_0.driver_safety_rating,d1_0.driver_safety_score,d1_0.driver_status,d1_0.is_active,d1_0.times_rated,d1_0.trips_driven,d1_0.updated_at,d1_0.user_id from driver d1_0 where d1_0.user_id=?
Hibernate: select r1_0.rider_id,r1_0.created_at,r1_0.is_active,r1_0.rider_responsibility_rating,r1_0.rider_safety_rating,r1_0.rider_safety_score,r1_0.rider_status,r1_0.times_rated,r1_0.trips_taken,r1_0.updated_at,r1_0.user_id from rider r1_0 where r1_0.user_id=?
Logged in successfully, now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
    <test duration="19" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginRiderEmail" name="testLoginRiderEmail()" metainfo="" status="passed">
        <output type="stdout">---Logging in to a rider account with email---
Logging with these credentials: { username: "testrider@gmail.com", password: "testrider"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.email=? and u1_0.password=?
Hibernate: select d1_0.driver_id,d1_0.created_at,d1_0.driver_responsibility_rating,d1_0.driver_safety_rating,d1_0.driver_safety_score,d1_0.driver_status,d1_0.is_active,d1_0.times_rated,d1_0.trips_driven,d1_0.updated_at,d1_0.user_id from driver d1_0 where d1_0.user_id=?
Hibernate: select r1_0.rider_id,r1_0.created_at,r1_0.is_active,r1_0.rider_responsibility_rating,r1_0.rider_safety_rating,r1_0.rider_safety_score,r1_0.rider_status,r1_0.times_rated,r1_0.trips_taken,r1_0.updated_at,r1_0.user_id from rider r1_0 where r1_0.user_id=?
Logged in successfully, now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
    <test duration="15" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginRiderUsername" name="testLoginRiderUsername()" metainfo="" status="passed">
        <output type="stdout">---Logging in to a rider account with username---
Logging with these credentials: { username: "testrider", password: "testrider"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select d1_0.driver_id,d1_0.created_at,d1_0.driver_responsibility_rating,d1_0.driver_safety_rating,d1_0.driver_safety_score,d1_0.driver_status,d1_0.is_active,d1_0.times_rated,d1_0.trips_driven,d1_0.updated_at,d1_0.user_id from driver d1_0 where d1_0.user_id=?
Hibernate: select r1_0.rider_id,r1_0.created_at,r1_0.is_active,r1_0.rider_responsibility_rating,r1_0.rider_safety_rating,r1_0.rider_safety_score,r1_0.rider_status,r1_0.times_rated,r1_0.trips_taken,r1_0.updated_at,r1_0.user_id from rider r1_0 where r1_0.user_id=?
Logged in successfully, now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
    <test duration="19" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginRiderDriverAdmin" name="testLoginRiderDriverAdmin()" metainfo="" status="passed">
        <output type="stdout">---Logging in to a rider-driver-admin account with email---
Logging with these credentials: { username: "testriderdriveradmin@gmail.com", password: "testriderdriveradmin"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.email=? and u1_0.password=?
Hibernate: select d1_0.driver_id,d1_0.created_at,d1_0.driver_responsibility_rating,d1_0.driver_safety_rating,d1_0.driver_safety_score,d1_0.driver_status,d1_0.is_active,d1_0.times_rated,d1_0.trips_driven,d1_0.updated_at,d1_0.user_id from driver d1_0 where d1_0.user_id=?
Hibernate: select r1_0.rider_id,r1_0.created_at,r1_0.is_active,r1_0.rider_responsibility_rating,r1_0.rider_safety_rating,r1_0.rider_safety_score,r1_0.rider_status,r1_0.times_rated,r1_0.trips_taken,r1_0.updated_at,r1_0.user_id from rider r1_0 where r1_0.user_id=?
Logged in successfully, now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
    <test duration="18" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginAdmin" name="testLoginAdmin()" metainfo="" status="passed">
        <output type="stdout">---Logging in to an admin account with email---
Logging with these credentials: { username: "testadmin@gmail.com", password: "testadmin"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.email=? and u1_0.password=?
Hibernate: select d1_0.driver_id,d1_0.created_at,d1_0.driver_responsibility_rating,d1_0.driver_safety_rating,d1_0.driver_safety_score,d1_0.driver_status,d1_0.is_active,d1_0.times_rated,d1_0.trips_driven,d1_0.updated_at,d1_0.user_id from driver d1_0 where d1_0.user_id=?
Hibernate: select r1_0.rider_id,r1_0.created_at,r1_0.is_active,r1_0.rider_responsibility_rating,r1_0.rider_safety_rating,r1_0.rider_safety_score,r1_0.rider_status,r1_0.times_rated,r1_0.trips_taken,r1_0.updated_at,r1_0.user_id from rider r1_0 where r1_0.user_id=?
Logged in successfully, now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
    <test duration="17" locationUrl="java:test://com.example.letsgo.LetsGoApplicationTests/testLoginRiderUnusualUsernameCapitalization" name="testLoginRiderUnusualUsernameCapitalization()" metainfo="" status="passed">
        <output type="stdout">---Logging in to a rider account with weirdly capitalized username---
Logging with these credentials: { username: "TeStRiDeR", password: "testrider"}
Hibernate: select u1_0.user_id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.is_active,u1_0.is_admin,u1_0.last_name,u1_0.overall_responsibility_rating,u1_0.overall_safety_rating,u1_0.overall_safety_score,u1_0.password,u1_0.times_rated,u1_0.updated_at,u1_0.user_status,u1_0.username from user u1_0 where u1_0.username=? and u1_0.password=?
Hibernate: select d1_0.driver_id,d1_0.created_at,d1_0.driver_responsibility_rating,d1_0.driver_safety_rating,d1_0.driver_safety_score,d1_0.driver_status,d1_0.is_active,d1_0.times_rated,d1_0.trips_driven,d1_0.updated_at,d1_0.user_id from driver d1_0 where d1_0.user_id=?
Hibernate: select r1_0.rider_id,r1_0.created_at,r1_0.is_active,r1_0.rider_responsibility_rating,r1_0.rider_safety_rating,r1_0.rider_safety_score,r1_0.rider_status,r1_0.times_rated,r1_0.trips_taken,r1_0.updated_at,r1_0.user_id from rider r1_0 where r1_0.user_id=?
Log in successful because usernames are case insensitive too apparently. Maybe the repository is coercing the string to lowercase?
Now using assertEquals() to evaluate the resulting HttpSession object
Logging out
Using assertEquals() to test that the user logged out and the HttpSession object was invalidated
Success!
</output>
    </test>
</testrun>
